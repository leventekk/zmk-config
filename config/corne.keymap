/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

// dt-formatter: indent = "  "
// dt-formatter: reindentMultilineIntegerCells = "dedent"

/ {
  combos {
    compatible = "zmk,combos";

    caps_word {
      bindings = <&caps_word>;
      key-positions = <17 18>;
    };

    delete {
      bindings = <&kp DEL>;
      key-positions = <32 33>;
    };

    esc {
      bindings = <&kp ESC>;
      key-positions = <19 20>;
    };

    delete_alt {
      bindings = <&kp DELETE>;
      key-positions = <24 11>;
    };

    backtick {
      bindings = <&kp GRAVE>;
      key-positions = <19 20 40>;
    };
  };

  macros {
    screenshot: screenshot {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings =
        <&macro_press &kp LGUI>,
        <&macro_tap &kp LSHIFT>,
        <&macro_release &kp NUMBER_4>;

      label = "SCREENSHOT";
    };
    next_desktop: next_desktop {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings =
        <&macro_press &kp LCTRL>,
        <&macro_release &kp RIGHT_ARROW>;

      label = "NEXT_DESKTOP";
    };
    prev_desktop: prev_desktop {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings =
        <&macro_press &kp LCTRL>,
        <&macro_release &kp LEFT_ARROW>;

      label = "PREV_DESKTOP";
    };
  };

  keymap {
    compatible = "zmk,keymap";

    base {
      bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BACKSPACE
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                         &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
      >;
    };

    raise {
      bindings = <
&kp ESC           &kp N1    &kp N2      &kp N3        &kp N4        &kp N5          &kp N6          &kp N7          &kp N8         &kp N9           &kp N0  &trans
&kp LEFT_CONTROL  &kp K_PP  &kp K_PREV  &kp K_NEXT    &kp K_VOL_DN  &kp K_VOL_UP    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT_ARROW  &trans  &trans
&kp LEFT_ALT      &trans    &trans      &trans        &trans        &trans          &kp HOME        &kp PG_DN       &kp PG_UP      &kp END          &trans  &trans
                                        &kp LEFT_GUI  &trans        &kp SPACE       &kp ENTER       &trans          &kp RIGHT_ALT
      >;
    };

    lower {
      bindings = <
&kp ESC    &kp EXCL       &kp AT         &kp HASH      &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &trans
&kp LCTRL  &prev_desktop  &next_desktop  &trans        &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LALT   &screenshot    &trans         &trans        &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                         &kp LEFT_GUI  &trans    &kp SPACE    &kp ENTER  &trans     &kp RIGHT_ALT
      >;
    };

    adjust {
      bindings = <
&trans  &trans  &trans  &trans  &bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 3  &trans  &trans  &trans  &rgb_ug RGB_TOG  &rgb_ug RGB_COLOR_HSB(0,60,50)
&trans  &trans  &trans  &trans  &trans      &bt BT_SEL 1    &bt BT_SEL 4  &trans  &trans  &trans  &bl BL_TOG       &rgb_ug RGB_COLOR_HSB(120,60,50)
&trans  &trans  &trans  &trans  &trans      &bt BT_SEL 2    &trans        &trans  &trans  &trans  &bl BL_CYCLE     &rgb_ug RGB_COLOR_HSB(240,60,50)
                        &trans  &trans      &trans          &trans        &trans  &trans
      >;
    };
  };

  conditional_layers {
    compatible = "zmk,conditional-layers";

    adjust_layer {
      if-layers = <1 2>;
      then-layer = <3>;
    };
  };
};
