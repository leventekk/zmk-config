/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

// dt-formatter: indent = "  "
// dt-formatter: reindentMultilineIntegerCells = "dedent"

/ {
  combos {
    compatible = "zmk,combos";

    caps_word {
      bindings = <&caps_word>;
      key-positions = <17 18>;
    };

    esc {
      bindings = <&kp ESC>;
      key-positions = <19 20>;
    };

    delete {
      bindings = <&kp DELETE>;
      key-positions = <24 11>;
    };
  };

  macros {
    screenshot: screenshot {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings =
        <&macro_press>,
        <&kp LGUI &kp LSHIFT>,
        <&macro_tap>,
        <&kp NUMBER_4>,
        <&macro_release>,
        <&kp LGUI &kp LSHIFT>;

      label = "SCREENSHOT";
    };

    next_desktop: next_desktop {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings =
        <&macro_press>,
        <&kp LCTRL>,
        <&macro_tap>,
        <&kp RIGHT_ARROW>,
        <&macro_release>,
        <&kp LCTRL>;

      label = "NEXT_DESKTOP";
    };

    prev_desktop: prev_desktop {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings =
        <&macro_press>,
        <&kp LCTRL>,
        <&macro_tap>,
        <&kp LEFT_ARROW>,
        <&macro_release>,
        <&kp LCTRL>;

      label = "PREV_DESKTOP";
    };
  };

  behaviors {
    rhmr: rhmr {
      compatible = "zmk,behavior-hold-tap";
      label = "RIGHT_HOMEROW";
      bindings = <&kp>, <&kp>;

      #binding-cells = <2>;
      tapping-term-ms = <280>;
      quick-tap-ms = <175>;
      flavor = "balanced";
      require-prior-idle-ms = <150>;
      hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
    };

    lhmr: lhmr {
      compatible = "zmk,behavior-hold-tap";
      label = "LEFT HOMEROW";
      bindings = <&kp>, <&kp>;

      #binding-cells = <2>;
      tapping-term-ms = <280>;
      quick-tap-ms = <175>;
      flavor = "balanced";
      require-prior-idle-ms = <150>;
      hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 36 37 38 39 40 41>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    base {
      bindings = <
&kp TAB    &kp Q        &kp W           &kp E       &kp R             &kp T        &kp Y    &kp U         &kp I       &kp O       &kp P                &kp BACKSPACE
&kp LCTRL  &lhmr LCTRL A  &lhmr LEFT_ALT S  &lhmr LGUI D  &lhmr LEFT_SHIFT F  &kp G        &kp H    &rhmr RSHIFT J  &rhmr RGUI K  &rhmr RALT L  &rhmr RCTRL SEMICOLON  &kp APOS
&kp LSHFT  &kp Z        &kp X           &kp C       &kp V             &kp B        &kp N    &kp M         &kp COMMA   &kp DOT     &kp FSLH             &kp RIGHT_SHIFT
                                        &kp LGUI    &mo 1             &kp SPACE    &kp RET  &mo 2         &kp RALT
      >;
    };

    raise {
      bindings = <
&kp ESC           &kp N1            &kp N2      &kp N3        &kp N4        &kp N5          &kp N6          &kp N7          &kp N8         &kp N9           &kp N0  &kp DEL
&kp LEFT_CONTROL  &kp C_PLAY_PAUSE  &kp C_PREV  &kp C_NEXT    &kp K_VOL_DN  &kp K_VOL_UP    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT_ARROW  &trans  &trans
&kp LSHFT         &trans            &trans      &trans        &trans        &trans          &kp HOME        &kp PG_DN       &kp PG_UP      &kp END          &trans  &trans
                                                &kp LEFT_GUI  &trans        &kp SPACE       &kp ENTER       &trans          &kp RIGHT_ALT
      >;
    };

    lower {
      bindings = <
&kp ESC    &kp EXCL       &kp AT         &kp HASH      &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &trans
&kp LCTRL  &prev_desktop  &next_desktop  &trans        &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &screenshot    &trans         &trans        &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                         &kp LEFT_GUI  &trans    &kp SPACE    &kp ENTER  &trans     &kp RIGHT_ALT
      >;
    };

    adjust {
      bindings = <
&trans  &trans  &trans  &trans  &bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 3  &trans  &trans  &trans  &rgb_ug RGB_TOG  &rgb_ug RGB_COLOR_HSB(0,60,50)
&trans  &trans  &trans  &trans  &trans      &bt BT_SEL 1    &bt BT_SEL 4  &trans  &trans  &trans  &bl BL_TOG       &rgb_ug RGB_COLOR_HSB(120,60,50)
&trans  &trans  &trans  &trans  &trans      &bt BT_SEL 2    &trans        &trans  &trans  &trans  &bl BL_CYCLE     &rgb_ug RGB_COLOR_HSB(240,60,50)
                        &trans  &trans      &trans          &trans        &trans  &trans
      >;
    };

    layer_4 {
      bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
      >;
    };
  };

  conditional_layers {
    compatible = "zmk,conditional-layers";

    adjust_layer {
      if-layers = <1 2>;
      then-layer = <3>;
    };
  };
};

/* vim: set ft=c tw=174: */
